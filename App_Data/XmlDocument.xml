<?xml version="1.0"?>
<doc>
    <assembly>
        <name>t11sqlbroker</name>
    </assembly>
    <members>
        <member name="M:t11sqlbroker.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:t11sqlbroker.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:t11sqlbroker.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,t11sqlbroker.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,t11sqlbroker.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:t11sqlbroker.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},t11sqlbroker.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.#ctor(t11sqlbroker.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,t11sqlbroker.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:t11sqlbroker.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:t11sqlbroker.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:t11sqlbroker.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="F:t11sqlbroker.Models.ConfigResult.statusCode">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConfigResult.errorCode">
            <summary>
            The error code, if there is an error.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConfigResult.errorText">
            <summary>
            If there is an error the error text
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConfigResult.errorStackTrace">
            <summary>
            Error stack trace for debugging purposes
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConfigResult.execMillis">
            <summary>
            The milliseconds of the execution time for performance benchmarking purposes. 
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.ProductionOrder">
            <summary>
            For more info check out SAP B1 DI API documentation
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.Profile">
            <summary>
            When a profile is defined the rest of the parameters are ignored.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.CompanyDB">
            <summary>
            The SAP B1 company database name
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.Server">
            <summary>
            The database server
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.DbUserName">
            <summary>
            The database user
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.UserName">
            <summary>
            The SAP B1 user name, manager, for example
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.DbServerType">
            <summary>
            The server type: HANA, MSSQL2016
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.NoPwdConnectionParams.AdoNetUser">
            <summary>
            An optional separate user can be configured for ADO.NET SQL operations.
            If not defined the DB user is used for ADO.NET connections, too
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.ConnectionParams">
            <summary>
            The connection details to reference a profile or define all the parameters to build a connection to a SAP B1 system.
            The server parameters may prevent the client to define a connection.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.Profile">
            <summary>
            When a profile is defined the rest of the parameters are ignored.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.CompanyDB">
            <summary>
            The SAP B1 company database name
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.Server">
            <summary>
            The database server
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.LicenseServer">
            <summary>
            The licen server URL including the port numbet, typically 30000
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.SLDServer">
            <summary>
            The SAP landscape server URL with the port number, typically 40000
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.DbUserName">
            <summary>
            The database user
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.DbPassword">
            <summary>
            The database user's password
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.UseTrusted">
            <summary>
            Define it as false, unless you know what you are doing.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.UserName">
            <summary>
            The SAP B1 user name, manager, for example
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.Password">
            <summary>
            The password of the SAP B1 user
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.DbServerType">
            <summary>
            The server type: HANA, MSSQL2016
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.AdoNetUser">
            <summary>
            An optional separate user can be configured for ADO.NET SQL operations.
            If not defined the DB user is used for ADO.NET connections, too
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.ConnectionParams.AdoNetPassword">
            <summary>
            The password for the ADO.NET user
            </summary>
        </member>
        <member name="M:t11sqlbroker.Models.ConnectionParams.GetConnectionProfile(System.String)">
            <summary>
            Returns connection parameter values from Web.config
            <configuration>	
            <configSections>
            		<section name = "SQLBrokerDefault" type="System.Configuration.SingleTagSectionHandler"/>
            	</configSections>
            	<SQLBrokerDefault CompanyDB = "SBODemoUS" Server="MIKISURFACE" LicenseServer="MIKISURFACE:30000"
            		SLDServer="MIKISURFACE:40000" DbUserName="sa" DbPassword="B1Admin" UserName="manager" Password="B1Admin"
            		DbServerType="MSSQL2016"/>
            	....
            </configuration>
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:t11sqlbroker.Models.ConnectionParams.boDataServerType">
            <summary>
            Converts the STRING database type to SAPbobsCOM.BoDataServerTypes
            </summary>
            <returns></returns>
        </member>
        <member name="T:t11sqlbroker.Models.DIConnection">
            <summary>
            Corresponds to SAPbobsCOM Company
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.DIConnection.ConnRef">
            <summary>
            This represents a transaction, actually
            </summary>
        </member>
        <member name="M:t11sqlbroker.Models.DIConnection.Dispose">
            <summary>
            Dispose guarantees that the DI API link is disposed correctly by ASP.NET runtime.
            No need for explicit disconnection. The connection is automatically disconnected.
            </summary>
        </member>
        <member name="M:t11sqlbroker.Models.DIConnection.Connect(t11sqlbroker.Models.ConnectionParams)">
            <summary>
            Builds a connection to SAP B1 via DI
            </summary>
            <returns></returns>
        </member>
        <member name="T:t11sqlbroker.Models.MultiRequest">
            <summary>
            Multi-Requests are supported only for SAP DI, that is the whole point.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MReqJob.reqType">
            <summary>
            GET, PUT/Update, POST/Add, DELETE/Delete/Cancel 
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MReqJob.boName">
            <summary>
            If the BO name is not defined on the URI then this an alternative possibility
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MReqJob.boId">
            <summary>
            ID is required for GET, PUT, DELETE requests
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.BORequest">
            <summary>
            The BO request data for GET, POST, PUT and DELETE requests.
            The HTTP response codes:
            GET - 404 Not Found, 200 OK
            POST - 201 Created (or 200 OK)
            DELETE - 410 Gone (or 200 OK), 404 Not Found
            PUT - 200 OK, 404 Not Found, Not Modified is never returned because of the limitations of DI.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BORequest.connection">
            <summary>
            Optional connection parameters, when the server is not preconfigured, 
            the client can send in the connection parameters.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BORequest.timeOut">
            <summary>
            The timeout of the query in seconds
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BORequest.rawXml">
            <summary>
            When true the XML text from SAP is returned as is.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BORequest.boXml">
            <summary>
            The BO XML to create or update the DI object.
            Don't send boXml for DELETE requests, otherwise your request is rejected.
            Normally, just send JSON BO it is converted by the server automatically for SAP DI API XML.
            This is in case of emergency when something is not OK with the JSON - XML conversion.
            XML - JSON conversion is done by Newtosoft's JSON tools, which is anyway included in ASP.NET projects.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BORequest.bo">
            <summary>
            The BO data in JSON format.
            Don't send BO JSON data for DELETE requests, otherwise your request is rejected.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BORequest.xmlSchema">
            <summary>
            The caller wants the XML Schema for the BO, too.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.SQLQuery">
            <summary>
            The Query command object
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.connection">
            <summary>
            Optional connection parameters, when the server is not preconfigured, 
            the client can send in the connection parameters.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.SQL">
            <summary>
            The SQL SELECT statement
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.maxRows">
            <summary>
            The number of rows returned by the query, you'd better use SELECT TOP, though.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.timeOut">
            <summary>
            The timeout of the query in seconds
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.rawXml">
            <summary>
            When true the XML text from SAP is returned as is.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.columnInfo">
            <summary>
            When, true column info is added along with the rows.
            This adds 3 - 5 seconds extra to the total execution time.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.parameters">
            <summary>
            Parameter array for user queries
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.userQuery">
            <summary>
            Name of the user quer
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.uqCategory">
            <summary>
            The category name of the user query
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLQuery.lang">
            <summary>
            The language of customized messages
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MultiResult.statusCode">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MultiResult.errorCode">
            <summary>
            The error code, if there is an error.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MultiResult.errorText">
            <summary>
            If there is an error the error text.
            If not found the HTTP not Found status code is here
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MultiResult.errorStackTrace">
            <summary>
            Error stack trace for debugging purposes
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MultiResult.execMillis">
            <summary>
            The milliseconds of the execution time for performance benchmarking purposes. 
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MultiResult.results">
            <summary>
            The array of the results of the requested jobs
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.MReqResult.sqlResult">
            <summary>
            GET, PUT/Update, POST/Add, DELETE/Delete/Cancel 
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.BOResult">
            <summary>
            The result object for the HTTP response for BO Requests
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.jobNumber">
            <summary>
            In multi-jobs requests the job index number starting with 0
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.statusCode">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.errorCode">
            <summary>
            The error code, if there is an error.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.errorText">
            <summary>
            If there is an error the error text.
            If not found the HTTP not Found status code is here
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.errorStackTrace">
            <summary>
            Error stack trace for debugging purposes
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.found">
            <summary>
            Returns if the object was found. For example after a deletion, no object is returned
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.id">
            <summary>
            The ID of the BO which was requested to be get/update/delete.
            ID is not returned after POST. It is available in the BO object returned ater addition.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.execMillis">
            <summary>
            The milliseconds of the execution time for performance benchmarking purposes. 
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.bo">
            <summary>
            Te BO data in JSON format
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.rawXml">
            <summary>
            The XML string of the BO, when requested
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.xmlSchema">
            <summary>
            The XML schema of the BO, when requested
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.connection">
            <summary>
            The effective connection details: Profile, CompanyDB, Server, DBUser, UserName.
            No passwords and no other details are returned.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.reqType">
            <summary>
            GET, PUT/Update, POST/Add, DELETE/Delete/Cancel 
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.BOResult.boName">
            <summary>
            If the BO name is not defined on the URI then this an alternative possibility
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.SQLResult">
            <summary>
            The result of the HTTP response for an SQL Query request.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.SQLResult.Column">
            <summary>
            When column information was requested, some details about the columns
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.Column.name">
            <summary>
            The column/field name
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.Column.dataType">
            <summary>
            The data type of the column: db_Alpha for strings, for example.
            For ADO.NET queries it's the database type name.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.Column.subType">
            <summary>
            The sub type of the field as defined by SAP.
            For ADO.NET queries, this is empty.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.Column.validValues">
            <summary>
            The valid value list. Most typical for Y/N columns
            For ADO.NET queries, this is empty.
            </summary>
        </member>
        <member name="T:t11sqlbroker.Models.SQLResult.ValidValue">
            <summary>
            The actual valid values for a field where valid values are defined in SAP B1
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.ValidValue.description">
            <summary>
            The display text of the fiield
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.ValidValue.value">
            <summary>
            The code/key value of the list element
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.statusCode">
            <summary>
            The HTTP status code.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.rollbackOnly">
            <summary>
            The transaction was set to rollback-only, so all insert, update, delete attempts were rolled back eventually.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.errorCode">
            <summary>
            The error code, if there is an error.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.errorText">
            <summary>
            If there is an error the error text
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.errorStackTrace">
            <summary>
            Error stack trace for debugging purposes
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.execMillis">
            <summary>
            The milliseconds of the execution time for performance benchmarking purposes. 
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.columns">
            <summary>
            When requested the array of column information.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.data">
            <summary>
            The query details for DI Recordset
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.rawXml">
            <summary>
            The data in XML format for DI Recordset queries
            For ADO.NET queries no XML is returned.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.connection">
            <summary>
            The effective connection details: Profile, CompanyDB, Server, DBUser, UserName.
            No passwords and no other details are returned.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.SQL">
            <summary>
            The SQL string executed for user queries
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.userQuery">
            <summary>
            The actually executed user query prefixed with its category name
            JobWatch.X.GetOpenJobs, for example refers to that this was an extension function.
            </summary>
        </member>
        <member name="F:t11sqlbroker.Models.SQLResult.extendedUQ">
            <summary>
            If an customised/extended version was found for the requested UQ, this is set to true
            </summary>
        </member>
        <member name="M:t11sqlbroker.Models.SQLResult.#ctor(System.Net.Http.HttpRequestMessage)">
            <summary>
            SQLResult must be initialized with HttpRequestMessage since it implements IHttpActionResult
            </summary>
            <param name="rm"></param>
        </member>
        <member name="M:t11sqlbroker.Models.SQLResult.setResponseStatus(System.Net.HttpStatusCode,System.Exception)">
            <summary>
            Call this function upon exception before returning HTTP response.
            </summary>
            <param name="e"></param>
        </member>
    </members>
</doc>
